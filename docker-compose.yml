version: "3.8"

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_NODE_ID: "1" # ✅ Added this to fix missing node ID error
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT" # ✅ Fixes unbound variable error
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d mydb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  dbgate:
    image: dbgate/dbgate
    ports:
      - "3000:3000"
    volumes:
      - dbgate_data:/dbgate
    depends_on:
      - postgres

  crawler:
    build:
      context: .
      dockerfile: Dockerfile.crawler
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPIC: "stackoverflow_questions"
      SCRAPE_INTERVAL: "60"
      DATABASE_DSN: "postgresql://user:password@postgres:5432/mydb"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  kafka_data:
    driver: local
  pg_data:
    driver: local
  dbgate_data:
